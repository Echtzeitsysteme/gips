module org.emoflon.gips.gipsl.GenerateGipsl

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.eclipse.emf.mwe.utils.StandaloneSetup

var rootPath = ".."

Workflow {
	
	bean = StandaloneSetup {
		    platformUri = "${rootPath}"
    		scanClassPath = true
    		registerGeneratedEPackage = "org.emoflon.ibex.gt.gtl.gTL.GTLPackage"
    		registerGenModelFile = "platform:/resource/org.emoflon.ibex.gt.gtl/model/generated/GTL.genmodel"
	}
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.emoflon.gips.gipsl"
				rootPath = rootPath
				runtimeTest = {
					enabled = false
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = false
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {
			name = "org.emoflon.gips.gipsl.Gipsl"
			fileExtensions = "gipsl"
			
			referencedResource = "platform:/resource/org.emoflon.ibex.gt.gtl/model/generated/GTL.genmodel"

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			generator = {
				generateXtendStub = true
			}
			junitSupport = {
				junitVersion = "5"
			}
			projectWizard = {
				generate = true
			}
		}
	}
}
